---
- name: Provision Cassandra cluster nodes on EC2
  hosts: localhost
  connection: local
  vars:
    - cluster_name: CassandraCluster

  tasks:
    - set_fact: image={{cassandra_ami}}
      when: cluster_ami

    - set_fact: image={{ubuntu_image}}
      when: not (cluster_ami == "true")

    - debug: msg="using ami {{image}}"

    - name: Launch instances
      local_action:
        module: ec2
        region: "{{region}}"
        zone: "{{zone}}"
        keypair: "{{key_name}}"
        group: "{{security_group}}"
        instance_type: "{{instance_type}}"
        image: "{{image}}"
        count: "{{cluster_nodes}}"
        user_data: "--clustername {{cluster_name}} --totalnodes {{cluster_nodes}} --version community --release {{cassandra_ver}}"
        wait: yes
      register: ec2_cluster

    - name: Add instances to host group
      local_action: add_host name={{item.public_ip}} groupname=NewCassandra
      with_items: ec2_cluster.instances

    - name: Add instances to private ip group
      local_action: add_host name={{item.private_ip}} groupname=CassandraPrivate
      with_items: ec2_cluster.instances

    - name: Add instance 0 to seeds group
      local_action: add_host name={{ec2_cluster.instances[0].id}} groupname=Seeds
      when: not add_node

    - name: Add instance 0 to seedsip group
      local_action: add_host name={{groups.CassandraPrivate[0]}} groupname=SeedsIp
      when: not add_node

    - name: Add instance 1 to seeds group
      local_action: add_host name={{ec2_cluster.instances[1].id}} groupname=Seeds
      when: not add_node and ec2_cluster.instances | length > 1

    - name: Add instance 1 to seedsip group
      local_action: add_host name={{groups.CassandraPrivate[1]}} groupname=SeedsIp
      when: not add_node and ec2_cluster.instances | length > 1


    - debug: msg="SeedsIp {{groups.SeedsIp}}"
      when: not add_node

    - debug: msg="Seeds {{groups.Seeds}}"
      when: not add_node

    - name: Tag instances
      local_action: ec2_tag resource={{item.id}} region={{region}} state=present
      with_items: ec2_cluster.instances
      args:
        tags:
          Name: "Cassandra"
          server: "origin"
          stopped: "{{stopped}}"
          user: "{{setup_name}}"

    - name: Tag Seed instances
      local_action: ec2_tag resource={{item}} region={{region}} state=present
      with_items: groups.Seeds
      args:
        tags:
          seed: "true"
      when: not add_node

    - name: Give everyone a minute or two
      pause: seconds=60
