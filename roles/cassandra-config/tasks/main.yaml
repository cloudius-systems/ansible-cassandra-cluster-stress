---
- name: Gather facts
  action: ec2_facts

# stop the service and clean data with wrong config file
- include: clean.yaml

# use exisiting nodes as seed, even if they are not
# TBD find public IP in case of multi region
- command: echo "{{ hostvars[item].ec2_private_ip_address }}"
  with_items: groups.Cassandra
  register: output
  changed_when: no
  when: add_node

- set_fact: seeds="{{ output.results|map(attribute='stdout')| first }}"
  when: add_node

- set_fact: seeds="{{ groups.SeedsIp | join(',') }}"
  when: not add_node and seeds is not defined

- set_fact: auto_bootstrap="true"
  when: add_node

- set_fact: snitch="Ec2MultiRegionSnitch"
  when: ec2_multiregion|bool

- set_fact: broadcast_address="{{ansible_ec2_public_ipv4}}"
  when: ec2_multiregion|bool

- debug: msg="seeds {{seeds}}"

- name: update broadcast_address
  lineinfile: "dest=/etc/cassandra/cassandra.yaml backup=yes state=present regexp='^broadcast_address:' line='broadcast_address: {{broadcast_address}}'"
  when: ec2_multiregion|bool

- name: update rpc_address
  lineinfile: "dest=/etc/cassandra/cassandra.yaml backup=yes state=present regexp='^rpc_address:' line='rpc_address: {{internal_ip}}'"
  when: ec2_multiregion|bool

- name: update broadcast_rpc_address
  lineinfile: "dest=/etc/cassandra/cassandra.yaml backup=yes state=present regexp='broadcast_rpc_address:' line='# broadcast_rpc_address:'"
  when: ec2_multiregion|bool

- name: update snitch
  lineinfile: "dest=/etc/cassandra/cassandra.yaml backup=yes state=present regexp='^endpoint_snitch:' line='endpoint_snitch: {{snitch}}'"
  when: ec2_multiregion|bool

- name: update seeds
  lineinfile: "dest=/etc/cassandra/cassandra.yaml backup=yes state=present regexp='- seeds:' line='          - seeds: \"{{seeds}}\"  '"

- name: update auto_bootstrap
  lineinfile: "dest=/etc/cassandra/cassandra.yaml backup=yes state=present regexp='^auto_bootstrap:' line='auto_bootstrap: {{auto_bootstrap}}'"
  when: add_node
